name: Checkov PR Scan

on:
  pull_request:
    paths:
      - '**.tf'

jobs:
  checkov_scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.x

    - name: Install Checkov
      run: |
        pip install checkov

    - name: Get changed Terraform files
      id: get_changed_files
      run: |
        echo "::set-output name=files::$(git diff --name-only --diff-filter=d origin/${{ github.base_ref }}..${{ github.head_ref }} -- '*.tf' | tr '\n' ' ')"

    - name: Run Checkov
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const {exec} = require("@actions/exec");
          const github = require("@actions/github");

          const files = ${{ steps.get_changed_files.outputs.files }};
          const fileList = files.split(' ');

          for (const file of fileList) {
            if (file) {
              let output = '';
              let checkovOutput = '';
              let passed = true;

              await exec("checkov -f " + file + " --output json", [], {
                listeners: {
                  stdout: (data) => {
                    checkovOutput += data.toString();
                  },
                },
              });

              const checkovResults = JSON.parse(checkovOutput).results;

              if (checkovResults.failed_checks.length > 0) {
                passed = false;
              }

              if (passed) {
                output = `#### Checkov Scan Results ðŸ“–: All checks passed for file: \`${file}\``;
              } else {
                output = `#### Checkov Scan Results ðŸ“–: for file: \`${file}\`
                <details>
                <summary>Show Details</summary>

                | Check ID | Description | File | Resource | Checkov Result |
                | -------- | ----------- | ---- | -------- | -------------- |
                ${checkovResults.failed_checks
                  .map((check) => {
                    return `| ${check.check_id} | ${check.check_name} | ${check.file_path} | ${check.resource} | ${check.check_result.result} |`;
                  })
                  .join("\n")}

                </details>`;
              }

              output += `\n\n*Pusher: @${{ github.actor }}, Action: ${{ github.event_name }}, Working Directory: ${{ github.workspace }}, Workflow: ${{ github.workflow }}*`;

              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: output
              });
            }
          }
